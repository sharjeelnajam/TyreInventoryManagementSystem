@page "/tenants/addedit/{Id:guid?}"
@using Domain
@using Infrastructure.Services
@inject ITenantService TenantService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>@(IsEditMode ? "Edit Tenant" : "Add Tenant")</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-header bg-gradient bg-primary text-white py-3 d-flex align-items-center">
                    <i class="bi @(IsEditMode ? "bi-pencil-square" : "bi-plus-circle") fs-3 me-2"></i>
                    <h4 class="mb-0 fw-semibold">@(IsEditMode ? "Edit Tenant" : "Add Tenant")</h4>
                </div>
                <div class="card-body p-5">
                    <EditForm Model="@tenant" OnValidSubmit="@HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger mb-4" />

                        <div class="row g-4">
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <InputText class="form-control shadow-sm" id="tenantName" @bind-Value="tenant.Name" placeholder="Name" />
                                    <label for="tenantName" class="text-muted">Name</label>
                                </div>
                                <ValidationMessage For="@(() => tenant.Name)" class="text-danger small mt-1" />
                            </div>

                            <div class="col-md-6">
                                <div class="form-floating">
                                    <InputText class="form-control shadow-sm" id="domain" @bind-Value="tenant.Domain" placeholder="Domain" />
                                    <label for="domain" class="text-muted">Domain</label>
                                </div>
                                <ValidationMessage For="@(() => tenant.Domain)" class="text-danger small mt-1" />
                            </div>

                            <div class="col-md-6">
                                <div class="form-floating">
                                    <InputText class="form-control shadow-sm" id="tenantEmail" @bind-Value="tenant.Email" placeholder="Email" />
                                    <label for="tenantEmail" class="text-muted">Email</label>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-floating">
                                    <InputText class="form-control shadow-sm" id="phone" @bind-Value="tenant.PhoneNumber" placeholder="Phone" />
                                    <label for="phone" class="text-muted">Phone</label>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-floating">
                                    <InputText class="form-control shadow-sm" id="city" @bind-Value="tenant.City" placeholder="City" />
                                    <label for="city" class="text-muted">City</label>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-floating">
                                    <InputText class="form-control shadow-sm" id="address" @bind-Value="tenant.Address" placeholder="Address" />
                                    <label for="address" class="text-muted">Address</label>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end mt-5 gap-3">
                            <button type="submit" class="btn btn-success btn-sm px-3 shadow-sm">
                                <i class="bi bi-save me-2"></i> Save
                            </button>
                            <button type="button" class="btn btn-outline-secondary btn-sm px-3 shadow-sm" @onclick="Cancel">
                                <i class="bi bi-x-circle me-2"></i> Cancel
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .form-floating label {
        opacity: 0.7; /* labels ki halka transparency */
    }

    .form-control:focus + label {
        opacity: 1; /* focus hone par clear ho jaye */
        color: #0d6efd;
    }

    .card {
        background: #ffffff;
    }
</style>

@code {
    [Parameter] public Guid? Id { get; set; }
    private Tenant tenant = new();
    private bool IsEditMode => Id.HasValue;

    protected override async Task OnInitializedAsync()
    {
        if (IsEditMode && Id.HasValue)
        {
            tenant = await TenantService.GetTenantByIdAsync(Id.Value) ?? new Tenant();
        }
    }

    private async Task HandleValidSubmit()
    {
        if (IsEditMode)
        {
            await TenantService.UpdateTenantAsync(tenant, null);
        }
        else
        {
            await TenantService.AddTenantAsync(tenant, Guid.Empty);
        }

        Navigation.NavigateTo("/tenants");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/tenants");
    }
}
